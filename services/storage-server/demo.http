@apiUrl = http://127.0.0.1:9000/v0
@token = YOUR_SECRET_TOKEN

### Get a public storage over nginx serve.
# GET {{apiUrl}}/public/comments/page1.json

### Get a document by storageName and docId.
GET {{apiUrl}}/?storage=comments/page1&id=0
Authorization: Bearer {{token}}

### Insert a document.
PATCH {{apiUrl}}/?storage=comments/page1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "id": "auto_increment",
  "from": "Ali Mihandoost",
  "message": "سلام"
}

###
PATCH {{apiUrl}}/?storage=comments/page1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "id": "auto_increment",
  "from": "Fateme Mihandoost",
  "message": "علیک سلام"
}

### Edit a document.
PATCH {{apiUrl}}/?storage=comments/page1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "id": "0",
  "from": "Ali Mihandoost",
  "message": "Salam ;)"
}

### Insert/edit multi documents.
PATCH {{apiUrl}}/batch?storage=comments/page1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "data": [
    {
      "id": "10",
      "from": "Ali Mihandoost",
      "message": "Edited message."
    },
    {
      "id": "auto_increment",
      "from": "Ali Mihandoost",
      "message": "New message."
    }
  ]
}

### Check document exists by storageName and docId.
GET {{apiUrl}}/has?storage=comments/page1&id=0
Authorization: Bearer {{token}}

### Delete document.
DELETE {{apiUrl}}/?storage=comments/page1&id=0
Authorization: Bearer {{token}}

### Delete multi documents.
DELETE {{apiUrl}}/batch?storage=comments/page1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "data": [
    {
      "id": "10",
      "from": "Ali Mihandoost",
      "message": "Edited message."
    },
    {
      "id": "auto_increment",
      "from": "Ali Mihandoost",
      "message": "New message."
    }
  ]
}

### Get all keys.
GET {{apiUrl}}/keys?storage=comments/page1
Authorization: Bearer {{token}}

### Get complete storage data.
GET {{apiUrl}}/storage?name=comments/page1
Authorization: Bearer {{token}}

### === Test other routes and errors ===

### Page Home
GET {{apiUrl}}

### Page health
GET {{apiUrl}}/health

### Get a document without token
GET {{apiUrl}}/?storage=comments/page1/page1&id=0

### Page 404 (wrong method)
TRACE {{apiUrl}}

### Document not exists
GET {{apiUrl}}/has?storage=comments/page1&id=foo
Authorization: Bearer {{token}}


### Get a document by storageName without id
GET {{apiUrl}}/?storage=comments/page1
Authorization: Bearer {{token}}

### empty body
PATCH {{apiUrl}}/?storage=comments/page1
Authorization: Bearer {{token}}
Content-Type: application/json

### invalid json
PATCH {{apiUrl}}/?storage=comments/page1
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "id":
}
